% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hopt.R
\name{hopt}
\alias{hopt}
\title{mobile windows h tuning}
\usage{
hopt(X, Y, h0 = NULL, lower = NULL, upper = NULL)
}
\arguments{
\item{X}{a numerical vector, matrix, or data.frame of explanatory variables of dimension nxq.}

\item{Y}{a numerical vector of response variable of size n.}

\item{h0}{initialisation of the h value of the optimisation process. By default equals to rep(0.5, p).}

\item{lower}{a numerical vector low bownding hopt. By default equals to rep(0.01, q).}

\item{upper}{a numerical vector low bownding hopt. By default equals to rep(2, q).}
}
\value{
a list of the parameter optimal value h and the criteria minimum reach
}
\description{
Tuning of the mobile windows h to estimate the cumulative distribution function (cdf)
}
\examples{
library(tidyverse)
library(condQuant)

set.seed(258164)
n <- 300
X <- runif(n = n, min = -2, max = 2)
Y <- X^2 + rnorm(n)
X <- as.data.frame(X)

#critere optimiser manuellement
critere_hopt = function(h, Xo, Yo){

  q = NCOL(Xo)
  n = NROW(Xo)

  #calcul de toutes les distances une Ã  une ponderer par la largeur de la fenetre
  b = lapply(seq_len(q), function(j){
    A = matrix(Xo[,j], nrow = n, ncol = n, byrow = F)
    (A - t(A)) / h[j]
  })

  # transformation de la liste sous forme de array pour utiliser apply apres
  d = array(unlist(b), dim = c(n, n, q))

  # application du noyaux aux distances sotckees dans d
  w = (2*pi)^(-q/2)*exp(-apply(d^2, c(1,2), sum)/2)

  # indicatrice pour chaque y en pairwise
  A = matrix(Yo, nrow = length(Yo), ncol = length(Yo), byrow = F)
  ind_y = apply(A - t(A) < 0, c(1,2), as.numeric)

  #double (triple) somme vectorisee
  diag(w) = 0
  B = w \%*\% t(ind_y)
  diag(B) = 0
  sum( (t(ind_y) - B/colSums(w))^2 )

}

formals(critere_hopt)$Xo = X
formals(critere_hopt)$Yo = Y

h_range <- seq(0.01, 0.5, 0.05)

res <- sapply(h_range, critere_hopt)
plot(x = h_range, y = res, type = 'b')

hopt(X = X, Y = Y)

}
