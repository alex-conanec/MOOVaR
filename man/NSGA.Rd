% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nsga.R
\name{NSGA}
\alias{NSGA}
\title{NSGA II algorithm}
\usage{
NSGA(
  X,
  fn,
  n_objective,
  sens = rep("min", n_objective),
  N = NROW(X),
  g = NULL,
  k_tournament,
  n_echange = 1,
  n_bloc = 2,
  crossing_over_method = "uniforme",
  mutation_method = "simple",
  freq_m = 0.2,
  type_var = NULL,
  distri_Xi = NULL,
  seed = NULL,
  TT = 50,
  verbose = TRUE,
  front_tracking = TRUE,
  updateProgress = NULL,
  path_tracking = NULL
)
}
\arguments{
\item{X}{matrix or data.frame of the initial population}

\item{fn}{multivarious functions taking X as argument and return p objectifs for each individu (row) of X}

\item{n_objective}{number of objective}

\item{sens}{vector of size n_objective containing either "min" (by default) or "max"
to choose how to optimize each objectif.}

\item{N}{integer indicating the size of the population}

\item{g}{list of constraint given as function of X. NULL by default}

\item{k_tournament}{integer between 2 and N indicating the number of individu
to pick at each tournament}

\item{n_echange}{integer between 1 and NCOL(X) indicating the number of
exchanges done between both parents}

\item{n_bloc}{integer between 1 and NCOL(X) indicating the number of bloc
switch between both parents}

\item{crossing_over_method}{crossingover method to use in c("uniforme", "bloc")}

\item{mutation_method}{mutation method to use in c("simple", "mixte")}

\item{freq_m}{mutation frequence for categorial variable or all variable
when mutation_method="simple"}

\item{type_var}{type of the X variables. NULL by default}

\item{distri_Xi}{list containing NCOL(X) inner list where four parameter are
given for a numeric variable: min, max, mean, sd and one if it is
categorical variable : levels}

\item{seed}{integer to set the seed and therefore obtain reproducible exemple.}

\item{TT}{integer indicating the number of population to grow}

\item{verbose}{if TRUE, echo information about the time generating the last
population}

\item{front_tracking}{if TRUE, the objectif achievement of each population
is stored in the result}

\item{updateProgress}{function to follow the progression of the running function}

\item{path_tracking}{path where to write the step of the running function.}
}
\value{
a vecteur of rank associated with the individus of X
}
\description{
The non sorting genetic algorithm is finding the Pareto front
}
\examples{
library(tidyverse)
set.seed(1234)
n <- 300
q = 3
mini <- rep(x = -2, times = q)
maxi <- rep(x = 2, times = q)

X <- lapply(seq_len(q), function(k){
  res <- data.frame(X=runif(n = n, min = mini[k], max = maxi[k]))
  names(res) <- paste0("X", k)
  res
}) \%>\% bind_cols()

fn <- list(
  Y1 = function(X) unlist(X[1] + 2*X[2] + X[3]),
  Y2 = function(X) unlist(-X[1] - X[2] - 3*X[3])
)

res = NSGA(X = X, fn, N=50)
plot(res$Y)

res = NSGA(X = X, fn, N=50, sens = rep("max", length(fn)))
plot(res$Y)

}
